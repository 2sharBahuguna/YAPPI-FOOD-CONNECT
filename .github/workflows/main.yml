name: Build and Deploy to DockerHub

on:
  push:
    branches:
      - main  # Trigger when code is pushed to the main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest  # Using the latest Ubuntu environment

    steps:
      # Step 1: Checkout the repository
      - name: Check out the repository
        uses: actions/checkout@v3

      # Step 2: Set up Docker Buildx for multi-platform builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Docker Hub username
          password: ${{ secrets.DOCKER_PASSWORD }}  # Docker Hub token

      # Step 4: Set up Docker Compose
      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      # Step 5: Set Docker Username as Environment Variable
      - name: Set up Docker Username Environment Variable
        run: echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}" >> $GITHUB_ENV

      # Step 6: Build and Push Docker images
      - name: Build and Push Docker images
        run: |
          docker-compose -f docker-compose.yml build
          docker-compose -f docker-compose.yml push

      # Step 7: Clean up Docker images
      - name: Clean up Docker images
        run: |
          docker system prune -af

      # Step 8: SSH to EC2 and deploy
      - name: SSH to EC2 and deploy
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.EC2_HOST }}  # Your EC2 public IP
          username: ec2-user  # Change to your EC2 username if different
          key: ${{ secrets.EC2_SSH_KEY }}  # Add your private SSH key as GitHub secret
          script: |
            cd /path/to/your/project  # Navigate to the project directory on EC2
            ./deploy.sh  # Run the deploy script you created earlier
